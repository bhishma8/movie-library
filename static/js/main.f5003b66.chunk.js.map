{"version":3,"sources":["Components/MovieComponent.js","Components/MovieInfoComponent.js","App.js","index.js"],"names":["MovieContainer","styled","div","CoverImage","img","MovieName","span","InfoColumn","MovieInfo","MovieComponent","props","movie","Title","Year","imdbID","Type","Poster","onClick","onMovieSelect","src","Container","Close","MovieInfoComponent","useState","movieInfo","setMovieInfo","selectedMovie","useEffect","Axios","get","API_KEY","then","response","data","imdbRating","Language","Rated","Released","Runtime","Genre","Director","Actors","Plot","Header","AppName","SearchBox","SearchIcon","SearchInput","input","MovieListContainer","App","searchQuery","updateSearchQuery","timeoutId","updateTimeoutId","movieList","updateMovieList","fetchData","searchString","a","res","Search","placeholder","value","onChange","event","clearTimeout","target","timeout","setTimeout","length","map","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5003b66.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst MovieContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 10px;\r\n  width: 280px;\r\n  box-shadow: 0 3px 10px 0 #aaa;\r\n  cursor: pointer;\r\n`;\r\nconst CoverImage = styled.img`\r\n  object-fit: cover;\r\n  height: 362px;\r\n`;\r\nconst MovieName = styled.span`\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  color: black;\r\n  margin: 15px 0;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n`;\r\nconst InfoColumn = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`;\r\nconst MovieInfo = styled.span`\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  color: black;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-transform: capitalize;\r\n  text-overflow: ellipsis;\r\n`;\r\nconst MovieComponent=(props)=>{\r\n    const {Title,Year,imdbID,Type,Poster}=props.movie;\r\n    return (\r\n        <MovieContainer onClick={()=>props.onMovieSelect(imdbID)}>\r\n            <CoverImage src={Poster}></CoverImage>\r\n            <MovieName>{Title}</MovieName>\r\n            <InfoColumn>\r\n                <MovieInfo>Year: {Year}</MovieInfo>\r\n                <MovieInfo>Type: {Type}</MovieInfo>\r\n            </InfoColumn>\r\n        </MovieContainer>\r\n\r\n    );\r\n};\r\nexport default MovieComponent;","import React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { API_KEY } from \"../App\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding: 20px 30px;\r\n  justify-content: center;\r\n  border-bottom: 1px solid lightgray;\r\n`;\r\nconst CoverImage = styled.img`\r\n  object-fit: cover;\r\n  height: 350px;\r\n`;\r\nconst InfoColumn = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 20px;\r\n`;\r\nconst MovieName = styled.span`\r\n  font-size: 22px;\r\n  font-weight: 600;\r\n  color: black;\r\n  margin: 15px 0;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-transform: capitalize;\r\n  text-overflow: ellipsis;\r\n  & span {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\nconst MovieInfo = styled.span`\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  color: black;\r\n  overflow: hidden;\r\n  margin: 4px 0;\r\n  text-transform: capitalize;\r\n  text-overflow: ellipsis;\r\n  & span {\r\n    opacity: 0.5;\r\n  }\r\n`;\r\nconst Close = styled.span`\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  color: black;\r\n  background: lightgray;\r\n  height: fit-content;\r\n  padding: 8px;\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n  opacity: 0.8;\r\n`;\r\nconst MovieInfoComponent=(props)=>{\r\n    const [movieInfo,setMovieInfo]=useState();\r\n    const{selectedMovie}=props;\r\n    useEffect(() => {\r\n        Axios.get(\r\n          `https://www.omdbapi.com/?i=${selectedMovie}&apikey=${API_KEY}`,\r\n        ).then((response) => setMovieInfo(response.data));\r\n      }, [selectedMovie]);\r\n    return (\r\n        <Container>\r\n        {movieInfo?<>\r\n            <CoverImage src={movieInfo?.Poster}></CoverImage>\r\n        <InfoColumn>\r\n        <MovieName>\r\n              {movieInfo?.Type}: <span>{movieInfo?.Title}</span>\r\n            </MovieName>\r\n            <MovieInfo>\r\n              IMDB Rating: <span>{movieInfo?.imdbRating}</span>\r\n            </MovieInfo>\r\n            <MovieInfo>\r\n              Year: <span>{movieInfo?.Year}</span>\r\n            </MovieInfo>\r\n            <MovieInfo>\r\n              Language: <span>{movieInfo?.Language}</span>\r\n            </MovieInfo>\r\n            <MovieInfo>\r\n              Rated: <span>{movieInfo?.Rated}</span>\r\n            </MovieInfo>\r\n            <MovieInfo>\r\n              Released: <span>{movieInfo?.Released}</span>\r\n            </MovieInfo>\r\n            <MovieInfo>\r\n              Runtime: <span>{movieInfo?.Runtime}</span>\r\n            </MovieInfo>\r\n            <MovieInfo>\r\n              Genre: <span>{movieInfo?.Genre}</span>\r\n            </MovieInfo>\r\n            <MovieInfo>\r\n              Director: <span>{movieInfo?.Director}</span>\r\n            </MovieInfo>\r\n            <MovieInfo>\r\n              Actors: <span>{movieInfo?.Actors}</span>\r\n            </MovieInfo>\r\n            <MovieInfo>\r\n              Plot: <span>{movieInfo?.Plot}</span>\r\n            </MovieInfo>\r\n\r\n        </InfoColumn>\r\n        <Close onClick={()=>props.onMovieSelect()}>X</Close>\r\n\r\n        </>:\"Loading....\"}\r\n        \r\n        </Container>\r\n\r\n    );\r\n};\r\nexport default MovieInfoComponent;","import Axios from 'axios';\nimport React, {useState} from 'react';\nimport styled from 'styled-components';\nimport MovieComponent from './Components/MovieComponent';\nimport MovieInfoComponent from './Components/MovieInfoComponent';\nexport const API_KEY=\"c129fa0b\";\nconst Container=styled.div`\n  display:flex;\n  flex-direction:column;\n  `;\nconst Header=styled.div`\ndisplay:flex;\nflex-direction:row;\nbackground-color:black;\ncolor:white;\npadding:10px;\njustify-content: space-between;\nalign-items: center;\n font-size: 25px;\n  font-weight: bold;\n  box-shadow: 0 3px 6px 0 #555;\n`;\nconst AppName = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\nconst SearchBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 10px 10px;\n  border-radius: 6px;\n  margin-left: 20px;\n  width: 50%;\n  background-color: white;\n  align-items:center;\n`;\nconst SearchIcon = styled.img`\n  width: 32px;\n  height: 32px;\n`;\nconst SearchInput = styled.input`\n  color: black;\n  font-size: 16px;\n  font-weight: bold;\n  border: none;\n  outline: none;\n  margin-left: 15px;\n`;\nconst MovieListContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  padding: 30px;\n  gap: 25px;\n  justify-content: space-evenly;;\n`;\n\nfunction App() {\n  const[searchQuery,updateSearchQuery]=useState();\n  const[timeoutId,updateTimeoutId]=useState();\n  const[movieList,updateMovieList]=useState([]);\n  const[selectedMovie,onMovieSelect]=useState();\n\n  const fetchData=async(searchString)=>{\n    const res = await Axios.get(\n      `https://www.omdbapi.com/?s=${searchString}&apikey=${API_KEY}`,\n    );\n    updateMovieList(res.data.Search);\n    };\n  \n  const onTextChange=(event)=>{\n    clearTimeout(timeoutId);\n    updateSearchQuery(event.target.value);\n    const timeout=setTimeout(()=>fetchData(event.target.value),500);\n    updateTimeoutId(timeout)\n\n  };\n  return (\n    <Container>\n      <Header>\n      <AppName>Movie Library</AppName>\n      <SearchBox>\n      <SearchIcon src=\"/search-icon.svg\"></SearchIcon>\n      <SearchInput \n        placeholder=\"Search Movie\" \n        value={searchQuery}\n        onChange={onTextChange}\n\n        />\n      </SearchBox>\n      </Header>\n      {selectedMovie && <MovieInfoComponent selectedMovie={selectedMovie} onMovieSelect={onMovieSelect}/>}\n      <MovieListContainer>\n        {\n          movieList?.length?movieList.map((movie,index)=>\n          <MovieComponent key={index} movie={movie} onMovieSelect={onMovieSelect}/>): \"No Movie Found\"\n        }\n\n      </MovieListContainer>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}